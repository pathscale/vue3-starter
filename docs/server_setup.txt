# this is the server side instruction to get the backend code up and running on the server
# it sets up a /home/deploy/user directory with project executable and config
# it creates a system service, opens port 8443 for endpoint

### INSTALL DEPENDENCIES
# update apt package list
sudo apt update
# install git, for cloning/pulling remote repository
sudo apt install git
# install cargo/rustfmt, for building/running the rust project
sudo apt install cargo
sudo apt install rustfmt
# install certbot, for setting up encrypted port connection
sudo add-apt-repository ppa:certbot/certbot
sudo apt-get install certbot

### PREPARE BACKEND EXECUTABLE AND CONFIG FILE
# set up a user service directory for final server resources
mkdir -p /usr/local/trading
# log into the git cli tool
gh auth login
# clone the backend source code
gh repo clone git@github.com:${PATH}
gh repo clone git@github.com:${PATH}
# go to backend code directory
cd  ${PATH}
# build release executable
cargo build --package user --release
# copy the user code and config code to the user service directory
cp target/release/user /usr/local/trading

### ENABLE SECURE CONNECTION
# generate public and private keys
certbot certonly --non-interactive --agree-tos --email "YOUR_EMAIL_HERE" --standalone --preferred-challenges http -d trading-be.example.app

### CONFIGURE AND RUN THE EXECUTABLE
# configure address to 0.0.0.0:8443 as below with nano editor and assign keys for secure websocket
nano /usr/local/trading/user/config.json
# {
#   "log_level": "info",
#   "log_file_config": {
#     "directory": "./log",
#     "file_name_prefix": "log",
#     "log_level": "warn"
#   },
#   "user": {
#     "address": "0.0.0.0:8443",
#     "priv_key": "/etc/letsencrypt/live/trading-be.example.app/privkey.pem",
#     "pub_certs": [
#       "/etc/letsencrypt/live/trading-be.example.app/fullchain.pem"
#     ]
#   }
# }
# (OPTIONAL) run the executable to see if everything is looking good
/usr/local/trading/user --config /usr/local/trading/user/config.json

### TURN BINARY INTO A SYSTEM SERVICE AND RUN
# configure system service as below with nano editor
mkdir -p ~/.config/systemd/user
nano ~/.config/systemd/user/trading_user.service
# [Unit]
# Description=
# After=network.target
# [Service]
# Type=simple
# ExecStart=/home/deploy/user/user --config /home/deploy/user/config.json
# [Install]
# WantedBy=multi-user.target
# enable systemctl user lingering
sudo loginctl enable-linger deploy
# enable and run the service
systemctl --user enable trading_user.service
systemctl --user start trading_user.service
# (OPTIONAL) stop service
systemctl --user stop trading_user.service
